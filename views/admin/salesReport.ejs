<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>sales report</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Customized Bootstrap Stylesheet -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="/css/style.css" rel="stylesheet">
    <style>
        #piechart {
    width: 400px;
    height: 400px;
    }
    .excel-button {
    display: inline-block;
    margin-right: 5%;
    }

    </style>
    
</head>

<body onload="weekly()">
    <div class="container-xxl position-relative bg-white d-flex p-0">
        <!-- Spinner Start -->
        <!-- <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div> -->
        <!-- Spinner End -->


        <!-- Sidebar Start -->
        <div class="sidebar pe-4 pb-3">
            <nav class="navbar bg-light navbar-light">
                <a href="index.html" class="navbar-brand mx-4 mb-3">
                    <h3 class="text-dark">SENHEIZER</h3>
                </a>
                <div class="d-flex align-items-center ms-4 mb-4">
                    <!-- <div class="position-relative">
                        <img class="rounded-circle" src="img/user.jpg" alt="" style="width: 40px; height: 40px;">
                        <div class="bg-success rounded-circle border border-2 border-white position-absolute end-0 bottom-0 p-1"></div>
                    </div> -->
                    <!-- <div class="ms-3">
                         <h6 class="mb-0">Jhon Doe</h6>
                        <span>Admin</span> 
                    </div> -->
                </div>
                <div class="navbar-nav w-100">
                    <a href="./index" class="nav-item nav-link "><i class="fa fa-tachometer-alt me-2"></i>Dashboard</a>
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown"><i class="fa fa-laptop me-2"></i>Product Details</a>
                        <div class="dropdown-menu bg-transparent border-0">
                            <a href="./viewProduct" class="dropdown-item">View products</a>
                            <a href="./addProduct" class="dropdown-item ">Add product</a>
                        </div>
                    </div>
                    <a href="./userManagement" class="nav-item nav-link "><i class="fa fa-th me-2"></i>User manage</a>
                    <a href="./categoryManage" class="nav-item nav-link "><i class="fa fa-keyboard me-2"></i>Category manage</a>
                    <a href="./ordermanagement" class="nav-item nav-link"><i class="fa fa-box me-2"></i>Order manage</a>
                    <a href="./couponManage" class="nav-item nav-link"><i class="fa fa-money-bill me-2"></i>Coupon manage</a>
                    <a href="./salesReport" class="nav-item nav-link active"><i class= "fa fa-chart-bar me-2"></i>Sales reports </a>
                    <a href="./banner" class="nav-item nav-link"><i class= "fa fa-print me-2"></i>Banner manage</a>

                    <!-- <a href="table.html" class="nav-item nav-link"><i class="fa fa-table me-2"></i>Tables</a> -->
                    <!-- <a href="chart.html" class="nav-item nav-link"><i class="fa fa-chart-bar me-2"></i>Charts</a>
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown"><i class="far fa-file-alt me-2"></i>Pages</a>
                        <div class="dropdown-menu bg-transparent border-0">
                            <a href="signin.html" class="dropdown-item">Sign In</a>
                            <a href="signup.html" class="dropdown-item">Sign Up</a>
                            <a href="404.html" class="dropdown-item">404 Error</a>
                            <a href="blank.html" class="dropdown-item">Blank Page</a>
                        </div>
                    </div> -->
                </div>
            </nav>
        </div>
        <!-- Sidebar End -->


        <!-- Content Start -->
        <div class="content">
            <!-- Navbar Start -->
            <%- include('navbar') %>
            <!-- Navbar End -->

            <!-- Blank Start -->
            <div class="container-fluid pt-4 px-4">
                <div class="row g-4">
                    <div class="col-sm-12 col-xl-12">
                        <div class="bg-light text-center rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <h6 class="mb-0">Sales</h6>
                                <div>
                                    <select id="time-filter">
                                        <option value="weekly">Weekly</option>
                                        <option value="monthly">Monthly</option>
                                        <option value="yearly">Yearly</option>
                                    </select>
                                </div>
                            </div>
                            <canvas id="chart"></canvas>
                            <script>
                                // Define your chart outside the event listener so it can be updated later
                                var ctx = document.getElementById('chart').getContext('2d');
                                var chart = new Chart(ctx, {
                                    type: 'bar', // or 'line'
                                    data: {
                                        labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
                                        datasets: [{
                                            label: 'Orders',
                                            data: [0, 0, 0, 0, 0, 0, 0], // Initialize with 0 orders for each day
                                            backgroundColor: [
                                                'rgba(255, 99, 132, 0.2)',
                                                'rgba(255, 159, 64, 0.2)',
                                                'rgba(255, 205, 86, 0.2)',
                                                'rgba(75, 192, 192, 0.2)',
                                                'rgba(54, 162, 235, 0.2)',
                                                'rgba(153, 102, 255, 0.2)',
                                                'rgba(201, 203, 207, 0.2)'
                                                ],                                            
                                            borderColor: [
                                                'rgb(255, 99, 132)',
                                                'rgb(255, 159, 64)',
                                                'rgb(255, 205, 86)',
                                                'rgb(75, 192, 192)',
                                                'rgb(54, 162, 235)',
                                                'rgb(153, 102, 255)',
                                                'rgb(201, 203, 207)'
                                            ],                                            
                                            borderWidth: 1
                                        },
                                        {
                                        label: 'Line',
                                        data: [0, 0, 0, 0, 0, 0, 0], 
                                        type: 'line',
                                        fill: false,
                                        borderColor: 'rgba(255, 99, 132, 1)'
                                    }]
                                    },
                                    options: {
                                        scales: {
                                            y: {
                                                beginAtZero: true
                                            }
                                        }
                                    }
                                });

                                function updateChart(filter) {
                                    fetch('./salesReport2', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({ filter: filter })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        
                                        chart.data.labels = [];
                                        chart.data.datasets[0].data = [];
                                        chart.data.datasets[1].data = [];

                                        if (data.choice === 'week') {
                                            chart.data.labels = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                                            chart.data.datasets[0].data = [0, 0, 0, 0, 0, 0, 0];
                                            chart.data.datasets[1].data = [0, 0, 0, 0, 0, 0, 0];
                                            data.data.forEach(item => {
                                                chart.data.datasets[0].data[item._id - 1] = item.totalSales;
                                                chart.data.datasets[1].data[item._id - 1] = item.count;
                                            });
                                        } else if (data.choice === 'monthly') {
                                            chart.data.labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                                            data.data.forEach(item => {
                                                chart.data.datasets[0].data[item.month - 1] = item.count;
                                                chart.data.datasets[1].data[item.month - 1] = item.count; // Add data to the line dataset
                                            });
                                        }else if (data.choice === 'yearly') {
                                            data.data.forEach(item => {
                                                chart.data.labels.push(item.year.toString());
                                                chart.data.datasets[1].data.push(item.count); 
                                                chart.data.datasets[0].data.push(item.count);
                                            });
                                        }
                                        chart.update();
                                    })
                                    .catch(err => {
                                        console.error(err);
                                    });
                                };
                                document.getElementById('time-filter').addEventListener('change', function() {
                                    updateChart(this.value);
                                });

                                updateChart('weekly');
                            </script>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container pt-4 px-4">
                <div class="row g-4">
                    <div class="col-sm-12 col-xl-12">
                        <div class="bg-light text-center rounded p-4"  style="width: 600px; height:700px;">
                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <h6 class="mb-0">Order status</h6>
                                <div>
                                    <select diabled id="pieTime-filter">
                                        <option value="weekly">Weekly</option>
                                        <option value="monthly">Monthly</option>
                                        <option value="yearly">Yearly</option>
                                    </select>
                                </div>
                            </div>
                            <canvas id="piechart"></canvas>
                            <script>
                                var ctx2 = document.getElementById('piechart').getContext('2d');
                                var chart2 = new Chart(ctx2, {
                                    type: 'polarArea', // Use 'polarArea' for Polar Area charts
                                    data:{
                                        labels:[],
                                        datasets:[{
                                            label:'Order status',
                                            data:[],
                                            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(255, 205, 86, 0.2)', 'rgba(201, 203, 207, 0.2)', 'rgba(54, 162, 235, 0.2)'],
                                            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)', 'rgba(255, 205, 86, 1)', 'rgba(201, 203, 207, 1)', 'rgba(54, 162, 235, 1)'],
                                            borderWidth: 1
                                        }]
                                    },
                                    options:{
                                        response:true,        
                                        maintainAspectRatio: false,
                                        plugin:{
                                            legend:{
                                                position:'top',
                                            },
                                            title:{
                                                display:true,
                                                text:'Prder Status Analysse'
                                            }
                                        }
                                    }
                                });
                                function PieChart() {
                                    fetch('./orderStatusAnalysis', {
                                        method: 'GET',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        }
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        chart2.data.labels = [];
                                        chart2.data.datasets[0].data = [];
                                        data.forEach(item => {
                                            chart2.data.labels.push(item.status);
                                            chart2.data.datasets[0].data.push(item.count);
                                        });
                                        chart2.update();
                                    })
                                    .catch(err => {
                                        console.error(err);
                                    })
                                }

                                document.getElementById('pieTime-filter').addEventListener('change', function() {
                                    PieChart(); 
                                });

                                PieChart(); 
                            </script>
                            
                        </div>
                    </div>
                </div>
            </div>
             <div class="container-fluid pt-4 px-4">
                <div class="row g-4">
                    <div class="col-sm-12 col-xl-6">
                        <div class="bg-light text-center rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <h6 class="mb-0">Popularity</h6>
                            </div>
                            <canvas id="chart3"></canvas>
                            <script>
                                function poupularity() {
                                    fetch('./productPopularity', {
                                        method: 'GET',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        }
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        var ctx = document.getElementById('chart3').getContext('2d');
                                        new Chart(ctx, {
                                            type: 'bar',
                                            data: {
                                                labels: data.map(item => item.brand),  // Use productName correctly
                                                datasets: [{
                                                    label: 'Product Popularity',
                                                    data: data.map(item => item.count), // Quantity ordered
                                                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                                    borderColor: 'rgba(75, 192, 192, 1)',
                                                    borderWidth: 1
                                                }]
                                            },
                                            options: {
                                                scales: {
                                                    y: {
                                                        beginAtZero: true
                                                    }
                                                },
                                            }
                                        });
                                    })
                                    .catch(err => {
                                        console.error(err);
                                    });
                                }
                            </script>
                        </div>
                    </div>
                    <div class="col-sm-12 col-xl-6">
                        <div class="bg-light text-center rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <h6 class="mb-0">popular payment </h6>
                            </div>
                            <canvas id="chart4" style=" height:100px;"></canvas>
                            <script>
                                // Fetch data and update chart
                                function paymentMethodPreferences() {
                                // Fetch payment method preferences data
                                fetch('./paymentMethodPreferences', {
                                    method: 'GET',
                                    headers: {
                                    'Content-Type': 'application/json'
                                    }
                                })
                                .then(response => response.json())
                                .then(data => {
                                    var ctx = document.getElementById('chart4').getContext('2d');
                                    new Chart(ctx, {
                                    type: 'line',
                                    data: {
                                        labels: data.map(item => item._id),  // Payment methods
                                        datasets: [{
                                        label: 'Payment Method Preferences',
                                        data: data.map(item => item.count),  // Counts
                                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                        borderColor: 'rgba(75, 192, 192, 1)',
                                        borderWidth: 1
                                        }]
                                    },
                                    options: {
                                        scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                        }
                                    }
                                    });
                                })
                                .catch(err => {
                                    console.error(err);
                                });
                                }
                                window.addEventListener('load', poupularity);
                                window.addEventListener('load', paymentMethodPreferences);
                                window.addEventListener('load', fetchSalesReport('weekly'));
                            </script>
                        </div>
                    </div>
                </div>

            </div> 
            <div class="container-fluid pt-4 px-4">
                <div class="row g-4">
                    <div class="col-sm-12 col-xl-12">
                        <div class="bg-light text-center rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <h6 class="mb-0">Revenue Statistics</h6>
                                <div>
                                    <select id="time-filter2">
                                        <option value="weekly">Weekly</option>
                                        <option value="monthly">Monthly</option>
                                        <option value="yearly">Yearly</option>
                                    </select>
                                </div>
                            </div>
                            <canvas id="chart5"></canvas>
                            <script>
                                var ctx6 = document.getElementById('chart5').getContext('2d');
                                var chart6 = new Chart(ctx6, {
                                    type: 'bar', // or 'line'
                                    data: {
                                        labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
                                        datasets: [{
                                            label: 'Orders',
                                            data: [0, 0, 0, 0, 0, 0, 0], // Initialize with 0 orders for each day
                                            backgroundColor: [
                                                'rgba(255, 99, 132, 0.2)',
                                                'rgba(255, 159, 64, 0.2)',
                                                'rgba(255, 205, 86, 0.2)',
                                                'rgba(75, 192, 192, 0.2)',
                                                'rgba(54, 162, 235, 0.2)',
                                                'rgba(153, 102, 255, 0.2)',
                                                'rgba(201, 203, 207, 0.2)'
                                                ],                                            
                                            borderColor: [
                                                'rgb(255, 99, 132)',
                                                'rgb(255, 159, 64)',
                                                'rgb(255, 205, 86)',
                                                'rgb(75, 192, 192)',
                                                'rgb(54, 162, 235)',
                                                'rgb(153, 102, 255)',
                                                'rgb(201, 203, 207)'
                                            ],                                            
                                            borderWidth: 1
                                        },
                                        {
                                        label: 'Line',
                                        data: [], // Initialize with empty array for data
                                        type: 'line',
                                        fill: false,
                                        borderColor: 'rgba(255, 99, 132, 1)'
                                    }]
                                    },
                                    options: {
                                        scales: {
                                            y: {
                                                beginAtZero: true
                                            }
                                        }
                                    }
                                });

                                function fetchSalesReport() {
                                    var filter2 = document.getElementById('time-filter2').value;

                                    fetch('./salesRevenue', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({ filter: filter2 })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        if(data.choice==='weekly'){
                                            const labels = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                                            chart6.data.labels = labels;
                                            chart6.data.datasets[0].data = data.report.map(item => item.totalSales); // Extract totalSales for chart
                                            chart6.update();
                                        }else if(data.choice==='monthly'){
                                            const labels = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]; // Month labels
                                            chart6.data.labels = labels;
                                            chart6.data.datasets[0].data = data.report.map(item => item.totalSales); // Extract totalSales for chart
                                            chart6.update();
                                        }else if(data.choice==='yearly'){
                                            // Generate year labels
                                            const labels = data.report.map(item => item.year.toString());
                                            chart6.data.labels = labels;
                                            chart6.data.datasets[0].data = data.report.map(item => item.totalSales); // Extract totalSales for chart
                                            chart6.update();
                                        }
                                    })                            
                                }
                            document.getElementById('time-filter2').addEventListener('change', function() {
                                fetchSalesReport(this.value);
                            });
                            fetchSalesReport('Weekly');

                            </script>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Blank End -->
            <br><br>
            
            <a href="./downloadreport" class="btn btn-lg btn-primary btn-lg-square back-to-top download-button"><i class="bi bi-download"></i></a>
            <a href="./excelconvert" class="btn btn-lg btn-primary btn-lg-square back-to-top excel-button"><i class="bi bi-file-earmark-spreadsheet"></i></a>


        </div>
    </div>
    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- <script src="lib/chart/chart.min.js"></script> -->
    <!-- <script src="lib/easing/easing.min.js"></script>
    <script src="lib/waypoints/waypoints.min.js"></script>
    <script src="lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="lib/tempusdominus/js/moment.min.js"></script>
    <script src="lib/tempusdominus/js/moment-timezone.min.js"></script> -->
    <script src="lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

    <!-- Template Javascript -->
    <script src="js/main.js"></script>
</body>

</html>
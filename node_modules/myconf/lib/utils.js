'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _homeDir = require('home-dir');

var _homeDir2 = _interopRequireDefault(_homeDir);

var _pathExists = require('path-exists');

var _pathExists2 = _interopRequireDefault(_pathExists);

var _jsYaml = require('js-yaml');

var _jsYaml2 = _interopRequireDefault(_jsYaml);

exports['default'] = {
  readFile: function readFile(filepath, parser) {
    return regeneratorRuntime.async(function readFile$(context$1$0) {
      while (1) switch (context$1$0.prev = context$1$0.next) {
        case 0:
          return context$1$0.abrupt('return', new Promise(function (resolve, reject) {
            (0, _pathExists2['default'])(filepath).then(function (exists) {
              if (exists) {
                var filedata = _fs2['default'].readFileSync(filepath, 'utf8');
                if (parser === 'json') {
                  filedata = JSON.parse(filedata);
                } else if (parser === 'yaml') {
                  filedata = _jsYaml2['default'].safeLoad(filedata);
                }
                return resolve(filedata);
              }
              return resolve(null);
            });
          }));

        case 1:
        case 'end':
          return context$1$0.stop();
      }
    }, null, this);
  },
  saveFile: function saveFile(filepath, data, parser) {
    return regeneratorRuntime.async(function saveFile$(context$1$0) {
      while (1) switch (context$1$0.prev = context$1$0.next) {
        case 0:
          return context$1$0.abrupt('return', new Promise(function (resolve, reject) {
            if (parser === 'json') {
              data = JSON.stringify(data, null, 2);
            } else if (parser === 'yaml') {
              data = _jsYaml2['default'].safeDump(data);
            }
            filepath = _path2['default'].resolve(filepath);
            _fs2['default'].writeFile(filepath, data, 'utf8', function (err) {
              if (err) {
                return reject(err);
              }
              return resolve(null);
            });
          }));

        case 1:
        case 'end':
          return context$1$0.stop();
      }
    }, null, this);
  }
};
module.exports = exports['default'];